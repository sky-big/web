// Code generated by MockGen. DO NOT EDIT.
// Source: src/common/http_helpers/validators.go

package http_helpers

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockValidator is a mock of Validator interface
type MockValidator struct {
	ctrl     *gomock.Controller
	recorder *MockValidatorMockRecorder
}

// MockValidatorMockRecorder is the mock recorder for MockValidator
type MockValidatorMockRecorder struct {
	mock *MockValidator
}

// NewMockValidator creates a new mock instance
func NewMockValidator(ctrl *gomock.Controller) *MockValidator {
	mock := &MockValidator{ctrl: ctrl}
	mock.recorder = &MockValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockValidator) EXPECT() *MockValidatorMockRecorder {
	return _m.recorder
}

// Do mocks base method
func (_m *MockValidator) Do(resource interface{}) (error, bool, string) {
	ret := _m.ctrl.Call(_m, "Do", resource)
	ret0, _ := ret[0].(error)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(string)
	return ret0, ret1, ret2
}

// Do indicates an expected call of Do
func (_mr *MockValidatorMockRecorder) Do(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Do", reflect.TypeOf((*MockValidator)(nil).Do), arg0)
}
